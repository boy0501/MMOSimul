2023-06-30

퀘스트 기능을 만들기 위해 설계 및 코드 작성

npc간의 대화는 클라이언트에서 이루어지도록 하고, 어떤 npc와 대화를 할 지는 서버에서 판정해주기로 함.

플레이어가 어떤 npc와 대화할지 서버에서 판정해주는 findingnpc 함수를 만듬

테스트 npc 생성 및 대화하는것 확인 (정상 작동)


다음 할 일
----------
클라이언트에 lua를 추가하고, npc와의 대화를 스크립트 형식으로 짜서 테스트까지 마치기

npc와의 대화는 그냥 읽는 형식과, 예/아니오 를 선택할수있는 분기가 나눠진 대화 두가지를 만들기.

----------------------
2023-07-08
여러가지 정보를 찾아보고 주변 사람과 얘기를 해본 뒤 내린 결정

클라이언트에 lua를 추가하는건 보류하기로 한다.

내가 생각해놓은 구조를 생각해보고, 보통 게임의 클라에 lua관련 정보가 있나 봤더니, 없었다. 내가 못찾은 것일 수 있지만 퀘스트관련 스크립트는 서버에서 판단해주는게 맞는 것 같다.

그러기위해선 스크립트 내에서 잠깐 멈췄다가 사용자 입력이 들어 온 후 다시 그 코드를 실행해야하는데, 단순하게 생각해보면 사용자 입력을 서버에서 기다리게되면 스레드가 멈추게 된다. 이것을 구현하기 위해선 멀티스레드 같은 기능이나 context switch같은 기능이 없다면 구현이 불가능 할 것 같은데, 예전 imc게임즈에서 썼던 스크립트 코드에서는 분명 가능했었기 때문에 가능하다는 것을 전제로 두고 찾아보니 루아에 코루틴이라는 게 있는걸 확인했다.

yield와 resume, coroutine을 이용해서 몸비틀어서 어떻게든 구현을 성공시켜보려고 한다.

https://wariua.github.io/lua-manual/5.4/manual.html#lua_resume

대강의 함수 설명이 있다. 아직 코딩을 안해서 어떤식으로 동작될지는 모르겠지만 험난한 여정이 될 것 같다. 꼭 성공 시키자

-----------------------------------------------
-> 0708 추가.

검색을 좀 더 해보니 클라이언트에서 스크립트 내용이 있는걸 확인했다. 다시 뒤집어서 클라에서 lua 스크립트를 넣어주도록 하자.

-----------------------------------------------
다시 확인해보니 메인퀘스트와 이벤트용 퀘스트가 서로 다른 것 같다. 메인스트림 퀘스트는 클라에 정보를 넣어놓고 퀘스트 아이템과 보상이 정해져있어서 그런것같은데, 이벤트 퀘스트는 보상을 기획자들이 유동적으로 바꿀 수 있게끔, 대화 스크립트를 클라에 넣어놓지 않은 것 같다.

내가 만들려고 하는 취지는 후자쪽에 가깝기 때문에, 서버에서 온몸비틀기를 다시 해주도록 하자.

//lua_newthread로 새 스레드를 만들면, 실행스택은 새롭게 만들어지지만 전역변수 및 환경은 공유된다.

-----------------------------------------------
0709
진짜 온 몸 비틀어서 구현에 성공해냈다.

일단 lua내부의 coroutine을 사용하기로 했다.
정확한진 모르겠으나 내가 확인한 바로는 C API의 coroutine을 사용하게 되면 C의 스레드를 yield가 되어버린다.

스크립트 내부에서 yield가 되어야하는게 내 목표이므로 루아 내부의 coroutine을 사용 

coroutine.create(코루틴 함수)를 하게 되면 코루틴을 하기 위한 새로운 스레드를 하나 내뱉어준다.
이는 준비동작이고 이후 coroutine.resume(cothread,인자) 를 통해 코루틴을 실행해준다.

이제 코루틴 함수내부에서 yield를 통해 잠깐 쉬었다가 resume로 다시 구동 가능하다.

작동은 잘 되나 문제가 있다.

여러번 말을 걸어 yield가 여러번 발생하게 됐을때 resume한번에 yield가 풀리고 몇번을 yield하던 나머진 다 씹혀버린다
이게 뭐가 문제냐면

lua_state는 npc하나에 묶여있기 때문에, 두명 이상의 플레이어가 동시에 말을 걸고 있는 상태라면, 1명에게만 제대로된 응답을 해주고 나머지 사람한텐 오류를 뱉어버린다.

이는 cothread를 내가 전역변수로 만들었기 때문이었는데 이것을 해결하기 위해 여러가지 방법을 시도해보았다.

<1번째 방법>
lua_tothread를 통해 cothread를 C++로 옮겨냈다. lua_state*로 뽑아낼 수 있다.
그리고 다시 lua 함수로 이 thread를 옮기기만 하면 된다.
하지만 lua_pushthread를 내가 잘못사용하는건지 뭔지 다른방법이 있는건지 메인스레드가 아니고 다른 스레드를 인자로 전달하게 되면 프로그램이 터지거나 nil을 뱉는다. 

이유는 공식문서를 봐도 잘 모르겠으나, 예측하자면 스레드끼리의 간섭을 막는 것 같다.

<2번째 방법>
lightuserdata라는 게 있다는걸 확인했다. 이는 void* 형으로 받는데, 이것을 통해 bit뭉탱이로 thread 데이터를 보내면 lua에서 해석해주지 않을까 싶어서 시도해봤는데
쓰레드데이터를 lightuserdata로 보냈는데 type이 thread가 아닌 userdata로 되어 실패했다.

<3번째 방법>
 metatable을 사용해서 옮겨보려고 했으나,, 내용이 너무나리 복잡하기에 몇번 만지작 하다가 놓았다.
그리고 살펴본 결과 결국에 중요한건 table에 값을 넣을 때 push를 통해 스택에 올리고 rewset으로 공유하는건데 이렇게 되면 결국 pushthread에서 막혔던 1번째방법에서 결국 좌절될것임이 보여 삽질하지 않았다.
https://github.com/zupet/LuaTinker/blob/master/sample4.cpp
lua_tinker 라는게 있는데 이걸로 공부해도 좋을듯 하다. 


<4번째 방법> 
cothread를 c++로 뺐다가 다시 인자로 넣는게 안된다면, 그냥 전역에 흩뿌려 놓는건?
구상 : table은 c++의 map과 같은 key-value가 가능하기에, 플레이어이름으로 key를 만들고 value를 cothread로 보관할 수 있지않을까?
사실 도중에 들었던 생각이긴 하지만, mmo특성상 엄청나게 많은 요청이 들어올수도 있는데 그럼 table에 엄청나게 많은 데이터가 쌓여서 결국 터진다 라고 생각되어 시도하지 않았다.
하지만 후에 생각해보니, npc대화만 하고 나면 다시 table에서 삭제해 줄거고, 이게 과부하가 될 정도라면 이미 사람이 너무 몰려서 움직이는것조차 힘든 렉이 걸려서 다른데서 문제가 생기지 여기선 문제가 생기지 않을거라는 나의 생각으로 이루어진 4번재 방법이다.

시도했고, 성공했다.

도움받은 사이트들
https://stackoverflow.com/questions/26574705/lua-newstate-vs-lua-newthread
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=eversir&logNo=110023510025 -코루틴
https://hoidu.tistory.com/entry/%EB%A3%A8%EC%95%84-%EC%BD%94%EB%A3%A8%ED%8B%B4 - 코루틴
https://m.blog.naver.com/aaa4379/221504944370 - 테이블 
-------------------------------------------------
6월 30일날 목표치로 했던것은 기획을 바꿔서 사실상 폐기가 되었고

오늘까지 한 것.

퀘스트 스크립트를 서버단에서 설계.

플레이어가 분기를 요청하는 dialog 뭐 수락한다/거절한다 를 서버에서 날려주고, 플레이어의 응답에 따라 다르게 반응할 수 있게끔 설계 해놓음.

아직 raw하게 짠거라 함수이름이나 더 다듬어야함.

db에서 코드누락으로 인한 버그 수정(next_result 를 빼먹음)


다음 할 일
------------------------------------------------

단순 dialog 만들기(단순 dialog는 클라한테 패킷 마구보내고 클라에서 모아서 보여주는걸로), 함수이름 정리하기,
완성도 있게 만들기

------------------------------------------------
2023-07-12

NPC 스크립트의 이상한 함수이름들을 바꾸고, 코루틴 관련 함수는 밖에서 안보이게끔 모듈화를 했다. 

모듈화 한것은 NPCHelper.lua에 있다.
이거 관련 이슈가 있었는데,,,, 
일단 require 키워드는 뒤에 .lua 붙이면 안되고, 경로 지정을 제대로 안하면 .exe파일이 있는곳에서 파일을 찾는다. (어쩌면 계속 파일들 탐색하면서 마지막에 .exe있는곳에서 찾은것일수도)

근데 이상하게 자꾸 require에서 오류를 뱉고, 제대로 실행이 안되어서 별 방법을 다썼다.
1. require를 내가 C++ 에서 새로 만들고 luaL_loadfile 같은거 써서,,, 마구 했는데

알고보니!!!!!!!!!! 그냥 함수 이름 API_NoticeWindowOK를 API_NoticeWindowOk로 써서... 마지막 k를 소문자로 써서 오류가.. ㅠㅠㅠㅠ 6시간 삽질,,,, 흑흑흑.... 제정신이 아닌가보다 

이상한걸로 뒷목잡혀서 단순 dialog는 하지도 못했네.. 대신 이제 찍어낼 수는 있음!

다음 할일 
-----------------------
단순 dialog 설계 짜두기 

예상 : 클라이언트 한테 다 보내고 클라에서 vector나 list형식으로 받아서 하나씩 뿌려주기, 이건 yes no 기다릴 필요가 없으므로 마구 보내고 클라에서 알아서 보내주도록 처리하자. yes or no도 생각해보니 vector형식으로 받아도 될듯? 어차피 서버에서 비동기로 짜서 괜찮을듯 한데 ?


------------------------------------------------
2023-07-19, 2023-07-22~23

19일날 작업한거 까먹고 일지 안씀,, 23일 작업한것과 같이 서술
퀘스트를 위해서는 클라이언트에서 dialog를 만들어줘야함. 
하지만 dialog만 있으면 안되고, 버튼도 있어야함 (yes no next)
그래서 19일은 버튼을 설계 했음. 
SFML에는 따로 버튼이 없기 때문에 class로 만들어 줘야함.
단순 버튼을 만들고 클릭해서 제대로 동작하는지 확인함.

23일날에는 다이얼로그를 만들기 시작함.
판떼기를 붙이고 버튼을 달아놓으니, 버튼에 부족한게 참 많았음
일단 눌렀을 때와 아닐 때 구분도 안됐고, 눌렀다가 마우스 밖으로 빼면 눌렀을 때가 유지되는 좀 버그같이 미흡하게 만든것도 많아서 싹다 수정함.

그리고 버튼이나 dlg같은 객체를 파괴하는 장치도 만들어야 했기 때문에, 따로 deleted 상태를 만들어서 deleted 상태면 loop에서 erase 해주도록 만듬. 객체는 vector로 관리
나같은 경우는 button이고 dlg고 다 따로 class로 만들었는데 사실 actor라는 상위 클래스를 만들어서 actor에 상태를 만들고 한꺼번에 관리해주는게 좋다고 생각하긴 함. 하지만 클라는 빠르게 만들고 서버작업을 하기 위해서 생략. 

그리고 dlg의 상태는 두가지가 있음. normal(다음버튼만 있는 것), select(예, 아니요 선택하는 것)
퀘스트 dlg에는 이 상태 두개가 번갈아 나올 수 있는데, 이때마다 버튼을 생성 파괴 하는건 생성오버헤드가 있기 때문에
미리 pool형식으로 만들어놓고, 포인터만 연결해주기로 함.

그리하여 dlg에는 yesbutton, nobutton, nextbutton 3가지 포인터를 가지고 있음.
그리고 nextbutton을 눌렀을 경우 다음 dlg를 보여줘야 하므로 currdlgnum을 두어 이 int에 따라 dlg를 다르게 하도록 함. 

그래서 dlg도 얼추 만듬.
그런데 button에서 버튼을 눌렀을때 동작을 해야하는데, 이를 만들어주기 위한 buttonpush() 함수를 만듬
버튼은 parent인 dlg 즉 pdlg 포인터를 가지고 있고
buttonpush에서 버튼이 yes인지 no인지 next인지를 구분하여 거기서 pdlg를 통해 다이얼로그에 신호를 주려고 했음.

그런데 생각해보니 언리얼같은데에서는 이렇게 복잡하게 하지 않고, 함수를 callback형식으로 걸어두어서
ex) &Dialog::SomeThing 식으로 등록하는걸 기억해냄 
그래서 functional 헤더를 사용해서 등록해보려 했으나 처음해보는거라 실패함.
그리고 알바가야해서 시간이 더 없기 때문에 여기까지만 작업함.

다음 할일
------------------------
function 이용해서 dlg함수 button에 등록하기


----------------------------
2023-08-03
코로나로 병들어서 이제야 개발 흑흑...

현재까지 이슈 : 클라이언트쪽 버퍼가 char형이라 size를 127까지밖에 못받고있었음
unsigned char로 바꾸어서 255까지 가능하도록 수정. 서버도 이에 맞춰서 증설.

일단 function사용해서 등록은 안했고 함수포인터로 했음.

계속 안됐던게 함수포인터 등록하려면 같은 클래스멤버함수거나 전역함수여야돼서 안됐었던거였음
왜냐면 다른클래스 멤버함수는 자신의 this가 넘어가기 때문에 어찌보면 당연하게 안되는거였음

뭔소린지는 멤버함수 불릴때 this와의 관계에 대해서,,

그래서 어쩃든 등록하고 그외 버튼 scale 관련 버그픽스하고

서버에서 클라로, 클라에서 서버로 버튼 및 루아에서 dialog뽑아내는거까지 완성 했음.
연속된건 vector로 받아서 연속되게 처리되는것도 했음. -> unordered_map 사용해서 같은 npc한테서 온 대화면 새로 dialog안만들고 기존 dialog에 add하는 식으로 작동하게 함.

+ ui관련한거 묶어서 처리하려고 widget클래스를 따로 팜. 그리고 네트워크관련 함수 다른데서 부를 수 있게 network.h/cpp도 따로 만들어줌. 

그리고 스크립트 관련 대화 200글자 제한, 이거때문에 패킷크기 127 -> 255로 변경함

코로나걸린 상태에서 하느라 식은땀나고 하길래 정리도 제대로 못함 ㅠ..


다음 할일 
-----------------------
db추가해서 
진짜 퀘스트 만들기 (간단한 대화 퀘스트) + 몬스터 인벤토리 db 만들고 퀘스트에 넣기 

